name: .NET CI with SonarCloud Analysis and Railway Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Set up JDK 17 for SonarCloud
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"

      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Restore dependencies
        run: dotnet restore TaskForge.NET/TaskForge.NET.sln

      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          dotnet sonarscanner begin \
            /k:"Learnathon-By-Geeky-Solutions_brainstormers" \
            /o:"learnathon-by-geeky-solutions" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.sources="TaskForge.NET" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/*.Designer.cs,**/Migrations/**,**/*.cshtml,**/*.css,**/*.cshtml.cs,**/*.less,**/*.scss,**/*.js,**/*.json" \
            /d:sonar.tests="TaskForge.NET" \
            /d:sonar.test.inclusions="**/*Tests/**/*.cs,**/*.Tests.cs,**/*.Test.cs" \
            /d:sonar.sourceEncoding="UTF-8" \
            /d:sonar.qualitygate.wait=true \
            /d:sonar.scm.provider=git \
            /d:sonar.alm.github.api.url=https://api.github.com

      - name: Build
        run: dotnet build TaskForge.NET/TaskForge.NET.sln --no-restore --configuration Release

      - name: Test with coverage
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet test TaskForge.NET/TaskForge.NET.sln --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  deploy:
    name: Deploy to Railway
    needs: build-and-analyze
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore TaskForge.NET/TaskForge.NET.sln

      - name: Publish .NET MVC App
        run: |
          dotnet publish TaskForge.NET/TaskForge.NET.csproj -c Release -o ./publish

      - name: Setup Railway CLI
        uses: ghcr.io/railwayapp/cli:latest
        env:
          railwayToken: ${{ secrets.RAILWAY_TOKEN }}
          SVC_ID: a5801c42-fe28-41f6-965c-17de80c2b789

      - name: Run Railway
        run: |
          railway up --service=${{ env.SVC_ID }} --directory=./publish
