@using TaskForge.Domain.Enums
@model ProjectDashboardViewModel

@{
    ViewData["Title"] = "Project Dashboard - " + Model.ProjectTitle;
}

<div class="container mt-4">
    <!-- Project Overview -->
    <div class="row">
        <div class="col-md-8">
            <h2 class="fw-bold"><i class="bi bi-kanban"></i> @Model.ProjectTitle</h2>
            <p class="text-muted">
                Project Status:
                @if (Model.ProjectStatus == ProjectStatus.NotStarted)
                {
                    <span class="badge bg-secondary">@Model.ProjectStatus.GetDisplayName()</span>
                }
                else if (Model.ProjectStatus == ProjectStatus.InProgress)
                {
                    <span class="badge bg-info">@Model.ProjectStatus.GetDisplayName()</span>
                }
                else if (Model.ProjectStatus == ProjectStatus.OnHold)
                {
                    <span class="badge bg-warning">@Model.ProjectStatus.GetDisplayName()</span>
                }
                else if (Model.ProjectStatus == ProjectStatus.Completed)
                {
                    <span class="badge bg-success">@Model.ProjectStatus.GetDisplayName()</span>
                }
                else if (Model.ProjectStatus == ProjectStatus.Cancelled)
                {
                    <span class="badge bg-danger">@Model.ProjectStatus.GetDisplayName()</span>
                }
                else
                {
                    <span class="badge bg-dark">@Model.ProjectStatus.GetDisplayName()</span>
                }
            </p>
        </div>

        <!-- Button to trigger the Edit Modal -->
         @if (Model.UserRoleInThisProject == ProjectRole.Admin){
            <div class="col-md-4 text-end">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editProjectModal">
                    <i class="bi bi-pencil-square"></i> Edit Project
                </button>
            </div>
         }
    </div>

    <!-- Modal for Editing Project -->
    <div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProjectModalLabel">Edit Project</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @if (Model.UpdateViewModel != null)
                    {
                        @await Html.PartialAsync("~/Views/Project/PartialViews/_EditProjectForm.cshtml", Model.UpdateViewModel)
                    }
                    else
                    {
                        <p class="text-danger">Error loading project details.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Quick Actions -->
<div class="row my-3">
    <div class="col-md-12">
        @if (Model.UserRoleInThisProject == ProjectRole.Admin || Model.UserRoleInThisProject == ProjectRole.Contributor)
	    {
		    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTaskModal">
			    <i class="bi bi-plus-circle"></i> Add Task
		    </button>

            
		    <!-- Modal for Adding Task -->
		    <div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="addTaskModalLabel" aria-hidden="true">
			    <div class="modal-dialog">
				    <div class="modal-content">
					    <div class="modal-header">
						    <h5 class="modal-title" id="addTaskModalLabel">Add New Task</h5>
						    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					    </div>
					    <div class="modal-body">
						    <!-- Render the Partial View for Task Form -->
						    @await Html.PartialAsync("~/Views/Task/PartialViews/_AddTaskForm.cshtml", new TaskItemViewModel {
							    ProjectId = Model.ProjectId 
                            })					    
						</div>
				    </div>
			    </div>
		    </div>
		}
	    @if (Model.UserRoleInThisProject == ProjectRole.Admin)
	    {
		    <a asp-action="ManageMembers" asp-route-id="@Model.ProjectId" class="btn btn-warning">
			    <i class="bi bi-people"></i> Manage Members
		    </a>
        }
    </div>
</div>
	
<!-- Main Section -->
<div class="">
	<!-- Bootstrap Tabs -->
    <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
	    <!-- Summary Tab -->
	    <li class="nav-item" role="presentation">
		    <button class="nav-link active" id="summary-tab" data-bs-toggle="tab" data-bs-target="#summary" type="button" role="tab" aria-controls="summary" aria-selected="true">
			    <i class="bi bi-bar-chart-fill"></i> Summary
		    </button>
	    </li>
	    <!-- Tasks Tab -->
	    <li class="nav-item" role="presentation">
		    <button class="nav-link" id="tasks-tab" data-bs-toggle="tab" data-bs-target="#tasks" type="button" role="tab" aria-controls="tasks" aria-selected="false">
			    <i class="bi bi-list-task"></i> Tasks
		    </button>
	    </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content mt-3" id="dashboardTabsContent">
        <!-- Summary Content -->
        <div class="tab-pane fade show active" id="summary" role="tabpanel" aria-labelledby="summary-tab">
            <div class="row">
                <!-- Task Summary -->
                <div class="col-md-4">
	                <div class="card shadow-sm border-primary">
		                <div class="card-body text-center">
			                <h5 class="card-title"><i class="bi bi-list-task text-primary"></i> Task Summary</h5>
			                <p class="mb-1"><strong>Total Tasks:</strong> @Model.TotalTasks</p>
			                <p class="mb-1 text-warning"><strong>Pending:</strong> @Model.PendingTasks</p>
			                <p class="mb-1 text-success"><strong>Completed:</strong> @Model.CompletedTasks</p>
		                </div>
	                </div>
                </div>

                <!-- Team Members -->
                <div class="col-md-4">
	                <div class="card shadow-sm border-info">
		                <div class="card-body text-center">
			                <h5 class="card-title"><i class="bi bi-people text-info"></i> Team Members</h5>
                            <p class="mb-1"><strong>Admin:</strong> @Model.TeamMembers.Where(m => m.Role == ProjectRole.Admin).ToList().Count</p>
                            <p class="mb-1"><strong>Contributor:</strong> @Model.TeamMembers.Where(m => m.Role == ProjectRole.Contributor).ToList().Count</p>
                            <p class="mb-1"><strong>Viewer:</strong> @Model.TeamMembers.Where(m => m.Role == ProjectRole.Viewer).ToList().Count</p>
			                <p class="mb-1"><strong>Pending Invitations:</strong> @Model.Invitations.Count</p>
			                @* <p class="mb-1"><a asp-action="ManageMembers" asp-route-id="@Model.ProjectId" class="text-info">View Members</a></p> *@
		                </div>
	                </div>
                </div>

                <!-- Project Dates -->
                <div class="col-md-4">
	                <div class="card shadow-sm border-secondary">
		                <div class="card-body text-center">
			                <h5 class="card-title"><i class="bi bi-calendar-check text-secondary"></i> Project Timeline</h5>
			                <p class="mb-1"><strong>Start Date:</strong> @Model.StartDate.ToString("yyyy-MM-dd")</p>
			                <p class="mb-1"><strong>End Date:</strong> @Model.EndDate?.ToString("yyyy-MM-dd")</p>
		                </div>
	                </div>
                </div>
            </div>
            <!-- Recent Activity -->
            @* <div class="row mt-4">
		        <div class="col-md-12">
		            <h4><i class="bi bi-clock-history"></i> Recent Activity</h4>
		            <ul class="list-group">
		                @foreach (var activity in Model.RecentActivities)
		                {
		                    <li class="list-group-item">
		                        <i class="bi bi-arrow-right-circle text-primary"></i>
		                        @activity.Action by @activity.UserName on @activity.Date.ToString("yyyy-MM-dd HH:mm")
		                    </li>
		                }
		            </ul>
		        </div>
		    </div> *@
        </div>

        <!-- Tasks Content -->
        <div class="tab-pane fade" id="tasks" role="tabpanel" aria-labelledby="tasks-tab">
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card shadow-sm border-primary">
                        <div class="card-body">
	                        <h5 class="card-title"><i class="bi bi-clipboard-check text-primary"></i> Project Tasks</h5>

                            <!-- Nav Tabs -->
                            <ul class="nav nav-pills mb-3" id="taskTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="todo-tab" data-bs-toggle="pill" href="#todo">To Do</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="inprogress-tab" data-bs-toggle="pill" href="#inprogress">In Progress</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="completed-tab" data-bs-toggle="pill" href="#completed">Completed</a>
                                </li>
                                <li class="nav-item">
	                                <a class="nav-link" id="blocked-tab" data-bs-toggle="pill" href="#blocked">Blocked</a>
                                </li>
                            </ul>

                            <!-- Tab Content -->
                            <div class="tab-content">
                                <!-- To Do Tab -->
                                <div class="tab-pane fade show active" id="todo">
                                    <div class="row">
                                        @foreach (var task in Model.TaskItems.Where(t => t.Status == TaskWorkflowStatus.ToDo))
                                        {
                                            @await Html.PartialAsync("~/Views/Task/PartialViews/_TaskCard.cshtml", task)
                                        }
                                    </div>
                                </div>

                                <!-- In Progress Tab -->
                                <div class="tab-pane fade" id="inprogress">
                                    <div class="row">
                                        @foreach (var task in Model.TaskItems.Where(t => t.Status == TaskWorkflowStatus.InProgress))
                                        {
	                                        @await Html.PartialAsync("~/Views/Task/PartialViews/_TaskCard.cshtml", task)
                                        }
                                    </div>
                                </div>

                                <!-- Completed Tab -->
                                <div class="tab-pane fade" id="completed">
	                                <div class="row">
		                                @foreach (var task in Model.TaskItems.Where(t => t.Status == TaskWorkflowStatus.Done))
		                                {
			                                @await Html.PartialAsync("~/Views/Task/PartialViews/_TaskCard.cshtml", task)
		                                }
	                                </div>
                                </div>

                                <!-- Blocked Tab -->
                                <div class="tab-pane fade" id="blocked">
	                                <div class="row">
		                                @foreach (var task in Model.TaskItems.Where(t => t.Status == TaskWorkflowStatus.Blocked))
		                                {
			                                @await Html.PartialAsync("~/Views/Task/PartialViews/_TaskCard.cshtml", task)
		                                }
	                                </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

</div>
