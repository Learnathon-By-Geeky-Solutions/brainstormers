@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TaskForge.Domain.Enums
@model TaskItemViewModel

<div class="col-md-4">
	<div class="card border mb-3">
		<div class="card-body">
			<h6 class="card-title text-primary"><i class="bi bi-clipboard-check"></i> @Model.Title</h6>
			<p class="text-muted">@Model.Description?.Substring(0, Math.Min(Model.Description.Length, 60))...</p>

			<!-- Task Info -->
			<div class="d-flex justify-content-between">
				<div class="">
					@foreach(var item in Model.AssignedUsers)
					{
						<span class="badge bg-light text-dark">
							<i class="bi bi-person"></i> @item.FullName
						</span>
					}
				</div>
				<div class="d-flex flex-column ">
					@if(Model.StartDate != null){
						<div class="badge bg-secondary mb-1 text-start">
							<i class="bi bi-calendar"></i> Start: @Model.StartDate?.ToString("dd/MM/yyyy")
						</div>
					}
					@if (Model.DueDate != null)
					{
						<div class="badge bg-danger text-start">
							<i class="bi bi-calendar"></i> End: @Model.DueDate?.ToString("dd/MM/yyyy")
						</div>
					}
				</div>
			</div>

			<!-- Status & Priority -->
			<div class="d-flex justify-content-between mt-2">
				<span class="badge @(Model.Status == TaskWorkflowStatus.Done ? "bg-success" 
				                   : Model.Status == TaskWorkflowStatus.InProgress ? "bg-warning text-dark" 
				                   : Model.Status == TaskWorkflowStatus.Blocked ? "bg-danger text-light" 
				                   : "bg-light text-dark")">
					@if (Model.Status == TaskWorkflowStatus.Done)
					{
						<i class="bi bi-check-circle"></i>
					}
					else if (Model.Status == TaskWorkflowStatus.InProgress)
					{
						<i class="bi bi-arrow-repeat"></i>
					}
					else if (Model.Status == TaskWorkflowStatus.Blocked)
					{
						<i class="bi bi-exclamation-triangle"></i>
					}
					else
					{
						<i class="bi bi-circle"></i>
					}
					Status: @Model.Status.GetDisplayName()
				</span>

				<span class="badge @(Model.Priority == TaskPriority.Critical ? "bg-danger" :
				                   Model.Priority == TaskPriority.High ? "bg-danger" :
				                   Model.Priority == TaskPriority.Medium ? "bg-warning text-dark" : "bg-secondary")">
					<i class="bi bi-exclamation-circle"></i> Priority: @Model.Priority
				</span>

			</div>

			<!-- Action Buttons -->
			<div class="mt-3 d-flex justify-content-between">
				<a href="#"
				class="btn btn-sm btn-outline-primary open-task-btn"
				data-task-id="@Model.Id"
				data-bs-toggle="modal"
				data-bs-target="#taskDetailsModal">
				<i class="bi bi-pencil"></i> Open
				</a>

				<a @* asp-action="DeleteTask" asp-route-id="@Model.Id" *@ class="btn btn-sm btn-outline-danger">
					<i class="bi bi-trash"></i> Delete
				</a>
			</div>
		</div>
	</div>
</div>